---
- name: Ensure User is present
  ansible.builtin.user:
    name: "{{ user_name }}"
    groups: "{{ user_groups }}"
    generate_ssh_key: true
    ssh_key_bits: 4096
    shell: "/bin/bash"
    state: present
  register: pi_new_user

- name: Upload SSH key
  ansible.builtin.authorized_key:
    user: "{{ user_name }}"
    key: "{{ lookup('file', '{{ ssh_pub_key }}') }}"

- name: Enable passwordless sudo
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^{{ user_name }}\t"
    line: "{{ user_name }}\tALL=(ALL:ALL) NOPASSWD:ALL"
    validate: "visudo -cf %s"

- name: Set User password
  ansible.builtin.user:
    name: "{{ user_name }}"
    password: "{{ user_password | password_hash('sha512') }}"
  when: pi_new_user.changed

- name: Change Pi's password
  ansible.builtin.user:
    name: pi
    password: "{{ pi_password | password_hash('sha512') }}"
  when: pi_new_user.changed

- name: Change ssh to new user password
  ansible.builtin.set_fact:
    pi_ansible_password: "{{ pi_password }}"
  when: pi_new_user.changed

- name: Change Autologin to User
  ansible.builtin.lineinfile:
    dest: /etc/lightdm/lightdm.conf
    state: present
    regexp: "autologin-user=pi"
    backrefs: true
    line: "autologin-user={{ user_name }}"
  become: true
  when: pi_new_user.changed

- name: Restart server
  ansible.builtin.reboot:
    msg: "Rebooting after user configuration"
    connect_timeout: 5
    pre_reboot_delay: 2
  async: 1
  poll: 0
  become: true
  become_method: ansible.builtin.sudo
  failed_when: false

- name: Wait for SSH to come up {{ host_ip }}
  ansible.builtin.wait_for_connection:
    delay: 60
    timeout: 300
